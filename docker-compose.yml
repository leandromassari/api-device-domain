services:
  postgres:
    image: postgres:16-alpine
    container_name: device-postgres
    environment:
      POSTGRES_DB: devicedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - device-network
    restart: unless-stopped

  sonarqube:
    image: sonarqube:10-community
    container_name: device-sonarqube
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonardb
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
    ports:
      - "9000:9000"
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs
    networks:
      - device-network
    restart: unless-stopped

  device-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: device-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/devicedb
      DB_USER: postgres
      DB_PASS: postgres
      DB_MAX_CONNECTIONS: 10
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    networks:
      - device-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres-data:
    driver: local
  sonarqube-data:
    driver: local
  sonarqube-extensions:
    driver: local
  sonarqube-logs:
    driver: local

networks:
  device-network:
    driver: bridge
